generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  firstName     String?
  lastName      String?
  email         String?   @unique
  emailVerified DateTime?
  hashedPassword  String?
  tokenBalance    Int       @default(10)
  image         String?
  
  accounts      Account[]
  sessions      Session[]
  mealPlans     MealPlan[]
  transactions  Transaction[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model MealPlan {
  id        String   @id @default(cuid())
  content   Json
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  title       String
  days        Int
  kcalTarget  Int
  status      String 
  dietTags    String[]
}

model Transaction {
  id          String   @id @default(cuid())
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  action      String   // "topup" | "spend"
  tokenAmount Int      // Количество токенов (положительное для пополнения, отрицательное для трат)
  amount      Float?   // Сумма в валюте (только для пополнений)
  currency    String?  // "EUR" | "GBP" | etc.
  description String?  // Описание транзакции
  createdAt   DateTime @default(now())
}